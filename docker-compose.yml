services:
  ros2_builder:
    profiles:
      - sim
      - real
      - teleop
      - teleop-leader
      - teleop-follower
      - teleop-logger
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - type: bind
        source: "."
        target: "/workspace"
    command: /workspace/scripts/docker/build-entrypoint.sh

  crane_x7_ros2_real:
    profiles:
      - real
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - type: bind
        source: "."
        target: "/workspace"
      - type: bind
        source: "/tmp/.X11-unix"
        target: "/tmp/.X11-unix"
    devices:
      - "$USB_DEVICE:/dev/ttyUSB0"
    privileged: true  # Required for RealSense camera USB access
    group_add:
      - dialout
      - "984"  # video group GID on Arch Linux
      - "985"  # uucp group GID on Arch Linux
    environment:
      - CUDA_VISIBLE_DEVICES=""
      - TF_CPP_MIN_LOG_LEVEL=2
    depends_on:
      ros2_builder:
        condition: service_completed_successfully
    command: /workspace/scripts/docker/run-entrypoint.sh ros2 launch crane_x7_log real_with_logger.launch.py

  crane_x7_ros2_sim:
    profiles:
      - sim
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - type: bind
        source: "."
        target: "/workspace"
      - type: bind
        source: "/tmp/.X11-unix"
        target: "/tmp/.X11-unix"
    environment:
      - CUDA_VISIBLE_DEVICES=""
      - TF_CPP_MIN_LOG_LEVEL=2
    depends_on:
      ros2_builder:
        condition: service_completed_successfully
    command: /workspace/scripts/docker/run-entrypoint.sh ros2 launch crane_x7_log demo_with_logger.launch.py

  crane_x7_teleop_leader:
    profiles:
      - teleop-leader
      - teleop
      - teleop-logger
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - type: bind
        source: "."
        target: "/workspace"
      - type: bind
        source: "/tmp/.X11-unix"
        target: "/tmp/.X11-unix"
    devices:
      - "$USB_DEVICE:/dev/ttyUSB0"
    privileged: true  # Required for RealSense camera USB access
    group_add:
      - dialout
      - "984"  # video group GID on Arch Linux
      - "985"  # uucp group GID on Arch Linux
    environment:
      - CUDA_VISIBLE_DEVICES=""
      - TF_CPP_MIN_LOG_LEVEL=2
    depends_on:
      ros2_builder:
        condition: service_completed_successfully
    stop_grace_period: 5s
    stop_signal: SIGINT
    command: /workspace/scripts/docker/run-entrypoint.sh ros2 launch crane_x7_log teleop_leader_with_logger.launch.py use_d435:=true output_dir:=/workspace/data/teleop_logs

  crane_x7_teleop_follower:
    profiles:
      - teleop-follower
      - teleop
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - type: bind
        source: "."
        target: "/workspace"
      - type: bind
        source: "/tmp/.X11-unix"
        target: "/tmp/.X11-unix"
    devices:
      - "${USB_DEVICE_FOLLOWER:-/dev/ttyUSB1}:/dev/ttyUSB0"
    group_add:
      - dialout
      - "984"  # video group GID on Arch Linux
      - "985"  # uucp group GID on Arch Linux
    depends_on:
      ros2_builder:
        condition: service_completed_successfully
    stop_grace_period: 5s
    stop_signal: SIGINT
    command: /workspace/scripts/docker/run-entrypoint.sh ros2 launch crane_x7_teleop teleop_follower.launch.py

  vla_finetune:
    profiles:
      - vla
    build:
      context: .
      dockerfile: Dockerfile
      target: vla
    volumes:
      - type: bind
        source: "./vla"
        target: "/workspace/vla"
      - type: bind
        source: "./data"
        target: "/workspace/data"
      - type: bind
        source: "./outputs"
        target: "/workspace/outputs"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    shm_size: '16gb'
    ipc: host
    working_dir: /workspace
    command: /bin/bash

networks:
  default:
    name: crane_x7

