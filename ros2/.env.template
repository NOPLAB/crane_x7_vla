# ============================================================================
# CRANE-X7 環境設定テンプレート
# ============================================================================
# このファイルを .env にコピーして、環境に合わせて値をカスタマイズしてください
#
# 使い方:
#   cp .env.template .env
#   # .env を編集して設定を変更
#   docker compose --profile <プロファイル名> up
# ============================================================================

# ----------------------------------------------------------------------------
# USBデバイス設定
# ----------------------------------------------------------------------------
# 実機ロボット制御用のUSBデバイス
# 利用可能なデバイスを確認: ls -l /dev/ttyUSB*
USB_DEVICE=/dev/ttyUSB0

# Followerロボット用のUSBデバイス（2台のロボットでテレオペレーションする場合）
# 同一マシンでLeaderとFollowerの両方を実行する場合のみ必要
USB_DEVICE_FOLLOWER=/dev/ttyUSB1

# ----------------------------------------------------------------------------
# ディスプレイ設定
# ----------------------------------------------------------------------------
# GUIアプリケーション（RViz、Gazebo）用のX11ディスプレイ
# WSL2の場合: :0 を使用
# ネイティブLinuxの場合: ディスプレイに応じて :0 または :1 を使用
DISPLAY=:0

# ----------------------------------------------------------------------------
# ROS 2 設定
# ----------------------------------------------------------------------------
# DDS通信用のROS 2 Domain ID
# 複数マシンでテレオペレーションする場合は、すべてのマシンで同じ値を使用
# 有効範囲: 0-101 (デフォルト: 42)
ROS_DOMAIN_ID=42

# ----------------------------------------------------------------------------
# ビルド設定
# ----------------------------------------------------------------------------
# "true" に設定するとビルド前にビルドディレクトリをクリーン（低速だが安全）
# "false" に設定すると高速なインクリメンタルビルド（デフォルト）
CLEAN_BUILD=false

# ----------------------------------------------------------------------------
# ユーザー設定（ファイルパーミッション用）
# ----------------------------------------------------------------------------
# ホストユーザーと一致させるユーザーIDとグループID（パーミッション問題を防ぐ）
# IDの取得方法: id -u (USER_ID用) と id -g (GROUP_ID用)
USER_ID=1000
GROUP_ID=1000
USERNAME=ros2user
